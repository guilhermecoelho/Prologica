@{
    ViewData["Title"] = "Consoles";
}

<head>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/knockout/build/output/knockout-latest.js"></script>
</head>
<body>
    <table>
        <tr>
            <td>
                <table id="tbldml" class="table">
                    <tr>
                        <td>Name</td>
                        <td><input type="text" id="txtName" data-bind="value: Name" /></td>
                    </tr>
                    <tr>
                        <td><button data-bind="click: save">Save</button></td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
    <div class="FixedContainer">
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <td scope="col" data-bind="value: Id">ID</td>
                    <td scope="col" data-bind="value: Name">Name</td>
                    <td></td>
                </tr>
            </thead>
            <!--Itera através de um observableArray usando foreach-->
            <tbody data-bind="foreach: Consoles">
                <tr>
                    <td data-bind="text: id"></td>
                    <td data-bind="text: name"></td>
                    <td><button data-bind="click:  $parent.delete">Delete</button></td>
                </tr>
            </tbody>
        </table>
    </div>
</body>

<script type="text/javascript">
    var ConsoleViewModel = function () {
        var self = this;

        self.Id = ko.observable("0");
        self.Name = ko.observable("");

        self.Consoles = ko.observableArray([]);

        GetConsoles();

        self.save = function () {
            var consoleData = {
                name: self.Name(),
            };
            $.ajax({
                type: "POST",
                url: "https://localhost:44300/console",
                data: ko.toJSON(consoleData),
                contentType: "application/json",
                success: function (data) {
                    alert("Console Added");
                    self.Id(data.Id);
                    alert("Console Id :" + self.Id());
                    GetConsoles();
                },
                error: function () {
                    alert("Falhou");
                }
            });
        };

        self.delete = function (consoleModel) {
            $.ajax({
                type: "DELETE",
                url: "https://localhost:44300/console/" + consoleModel.id,
                success: function (data) {
                    alert("Registro deletado com sucesso");
                    GetConsoles();
                },
                error: function (error) {
                    alert(error.status + "<--and--> " + error.statusText);
                }
            });
        };

        // self.update = function () {
        //     var url = "/api/Funcionario/" + self.funcionarioid();
        //     alert(url);
        //     $.ajax({
        //         type: "PUT",
        //         url: url,
        //         data: ko.toJSON(FunciDados),
        //         contentType: "application/json",
        //         success: function (data) {
        //             alert("Registro atualizado com sucesso.");
        //             GetFuncionarios();
        //         },
        //         error: function (error) {
        //             alert(error.status + "<!----!>" + error.statusText);
        //         }
        //     });
        // };

        function GetConsoles() {
            $.ajax({
                type: "GET",
                url: "https://localhost:44300/console",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    self.Consoles(data);
                },
                error: function (error) {
                    alert(error.status + "<--and--> " + error.statusText);
                }
            });
            //fim
        }
    };
    ko.applyBindings(new ConsoleViewModel());
</script>


